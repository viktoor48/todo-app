{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from \"vue\";\nimport { saveToLocalStorage, getFromLocalStorage } from \"@/localstorage\";\nimport { getCurrentDate } from \"@/utils\";\nexport default {\n  name: \"App\",\n  components: {},\n  setup() {\n    const isOpenForm = ref(false);\n    const taskName = ref(\"\");\n    const tasks = ref(getFromLocalStorage(\"tasks\") || []);\n    const openForm = () => {\n      isOpenForm.value = true;\n    };\n    const closeForm = () => {\n      isOpenForm.value = false;\n    };\n    const onSubmit = () => {\n      if (taskName.value.length !== 0) {\n        tasks.value.push({\n          name: taskName.value,\n          checked: false,\n          date: getCurrentDate()\n        });\n        saveToLocalStorage(\"tasks\", tasks.value);\n      }\n    };\n    const handleCheck = task => {\n      task.checked = !task.checked;\n      saveToLocalStorage(\"tasks\", tasks.value);\n    };\n    const deleteTask = taskInd => {\n      tasks.value = tasks.value.filter((task, i) => {\n        return i !== taskInd;\n      });\n      saveToLocalStorage(\"tasks\", tasks.value);\n    };\n    return {\n      isOpenForm,\n      taskName,\n      tasks,\n      deleteTask,\n      handleCheck,\n      onSubmit,\n      openForm,\n      closeForm\n    };\n  },\n  mounted() {}\n};","map":{"version":3,"names":["ref","saveToLocalStorage","getFromLocalStorage","getCurrentDate","name","components","setup","isOpenForm","taskName","tasks","openForm","value","closeForm","onSubmit","length","push","checked","date","handleCheck","task","deleteTask","taskInd","filter","i","mounted"],"sources":["/Users/viktor/PhpstormProjects/todo-app/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"wrapper\">\n    <div class=\"container\">\n      <div class=\"container mx-auto\">\n        <div class=\"flex-container\">\n          <div class=\"div\">\n            <h1 class=\"text-2xl font-bold\">Список задач</h1>\n          </div>\n          <button @click=\"openForm\" class=\"btn btn-add-task text-2xl font-bold\">\n            Добавить задачу\n          </button>\n        </div>\n        <form v-if=\"isOpenForm\" class=\"form mt-4 flex\" id=\"task-form\">\n          <input\n            type=\"text\"\n            class=\"input mr-2 p-2 border border-gray-300 flex-grow\"\n            placeholder=\"Введите название\"\n            id=\"task-input\"\n            required\n            v-model=\"taskName\"\n          />\n          <button\n            @click=\"onSubmit\"\n            type=\"submit\"\n            class=\"form__btn px-4 py-2 bg-blue-500 text-white font-semibold\"\n          >\n            Добавить\n          </button>\n          <button\n            @click=\"closeForm\"\n            type=\"submit\"\n            class=\"form__btn\"\n          >\n            Отмена\n          </button>\n        </form>\n        <ul v-if=\"tasks.length > 0\" class=\"task-list\">\n          <li\n            v-for=\"(task, ind) in tasks\"\n            :key=\"ind\"\n            class=\"task-item\"\n          >\n            <div class=\"task-item__header\">\n              <div class=\"left-filed\">\n                <input\n                  @click=\"handleCheck(task)\"\n                  :checked=\"task.checked\"\n                  type=\"checkbox\"\n                  class=\"task-item__checkbox mr-2\"\n                />\n                <span\n                  :class=\"{ strikethrough: task.checked }\"\n                  class=\"task-name font-medium\"\n                  >{{ task.name }}</span\n                >\n              </div>\n              <button @click=\"deleteTask(ind)\">Удалить</button>\n            </div>\n            <div class=\"task-item__footer\">\n              <div class=\"task-item__date\">{{ task.date }}</div>\n            </div>\n          </li>\n        </ul>\n        <div v-else class=\"message-block\">Список задач пуст</div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport { saveToLocalStorage, getFromLocalStorage } from \"@/localstorage\";\nimport { getCurrentDate } from \"@/utils\";\n\nexport default {\n  name: \"App\",\n  components: {},\n  setup() {\n    const isOpenForm = ref(false);\n    const taskName = ref(\"\");\n    const tasks = ref(getFromLocalStorage(\"tasks\") || []);\n\n    const openForm = () => {\n      isOpenForm.value = true;\n    };\n\n    const closeForm = () => {\n      isOpenForm.value = false;\n    };\n\n    const onSubmit = () => {\n      if (taskName.value.length !== 0) {\n        tasks.value.push({\n          name: taskName.value,\n          checked: false,\n          date: getCurrentDate(),\n        });\n        saveToLocalStorage(\"tasks\", tasks.value);\n      }\n    };\n\n    const handleCheck = (task) => {\n      task.checked = !task.checked;\n      saveToLocalStorage(\"tasks\", tasks.value);\n    };\n\n    const deleteTask = (taskInd) => {\n      tasks.value = tasks.value.filter((task, i) => {\n        return i !== taskInd;\n      });\n      saveToLocalStorage(\"tasks\", tasks.value);\n    };\n\n    return {\n      isOpenForm,\n      taskName,\n      tasks,\n      deleteTask,\n      handleCheck,\n      onSubmit,\n      openForm,\n      closeForm,\n    };\n  },\n  mounted() {},\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\n* {\n  box-sizing: border-box;\n}\n\n.wrapper {\n  width: 100%;\n  height: 100%;\n}\n\n.container {\n  max-width: 700px;\n  margin: 0 auto;\n}\n\n.btn {\n  padding: 5px;\n  font-size: 16px;\n  border: none;\n  text-align: center;\n  text-decoration: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.flex-container {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.task-list {\n  width: 100%;\n  list-style: none;\n  padding: 0;\n  margin-top: 30px;\n}\n\n.task-item {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid lightgrey;\n  border-radius: 6px;\n}\n\n.task-item + .task-item {\n  margin-top: 20px;\n}\n\n.task-item__header {\n  display: flex;\n  justify-content: space-between;\n}\n\n.task-item__footer {\n  margin-top: 14px;\n  padding-top: 10px;\n  border-top: 1px solid lightgrey;\n}\n\n.task-item__date {\n  display: flex;\n  margin-left: 10px;\n}\n\n.task-name {\n  margin-left: 10px;\n}\n\n.form {\n  width: 100%;\n  display: flex;\n}\n\n.input {\n  width: 100%;\n  font-size: 16px;\n  padding: 5px;\n}\n\n.form__btn {\n  margin-left: 20px;\n}\n\n.strikethrough {\n  text-decoration: line-through;\n}\n\n.message-block {\n  margin-top: 40px;\n}\n</style>\n"],"mappings":";AAsEA,SAASA,GAAE,QAAS,KAAK;AACzB,SAASC,kBAAkB,EAAEC,mBAAkB,QAAS,gBAAgB;AACxE,SAASC,cAAa,QAAS,SAAS;AAExC,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE,CAAC,CAAC;EACdC,KAAKA,CAAA,EAAG;IACN,MAAMC,UAAS,GAAIP,GAAG,CAAC,KAAK,CAAC;IAC7B,MAAMQ,QAAO,GAAIR,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMS,KAAI,GAAIT,GAAG,CAACE,mBAAmB,CAAC,OAAO,KAAK,EAAE,CAAC;IAErD,MAAMQ,QAAO,GAAIA,CAAA,KAAM;MACrBH,UAAU,CAACI,KAAI,GAAI,IAAI;IACzB,CAAC;IAED,MAAMC,SAAQ,GAAIA,CAAA,KAAM;MACtBL,UAAU,CAACI,KAAI,GAAI,KAAK;IAC1B,CAAC;IAED,MAAME,QAAO,GAAIA,CAAA,KAAM;MACrB,IAAIL,QAAQ,CAACG,KAAK,CAACG,MAAK,KAAM,CAAC,EAAE;QAC/BL,KAAK,CAACE,KAAK,CAACI,IAAI,CAAC;UACfX,IAAI,EAAEI,QAAQ,CAACG,KAAK;UACpBK,OAAO,EAAE,KAAK;UACdC,IAAI,EAAEd,cAAc,CAAC;QACvB,CAAC,CAAC;QACFF,kBAAkB,CAAC,OAAO,EAAEQ,KAAK,CAACE,KAAK,CAAC;MAC1C;IACF,CAAC;IAED,MAAMO,WAAU,GAAKC,IAAI,IAAK;MAC5BA,IAAI,CAACH,OAAM,GAAI,CAACG,IAAI,CAACH,OAAO;MAC5Bf,kBAAkB,CAAC,OAAO,EAAEQ,KAAK,CAACE,KAAK,CAAC;IAC1C,CAAC;IAED,MAAMS,UAAS,GAAKC,OAAO,IAAK;MAC9BZ,KAAK,CAACE,KAAI,GAAIF,KAAK,CAACE,KAAK,CAACW,MAAM,CAAC,CAACH,IAAI,EAAEI,CAAC,KAAK;QAC5C,OAAOA,CAAA,KAAMF,OAAO;MACtB,CAAC,CAAC;MACFpB,kBAAkB,CAAC,OAAO,EAAEQ,KAAK,CAACE,KAAK,CAAC;IAC1C,CAAC;IAED,OAAO;MACLJ,UAAU;MACVC,QAAQ;MACRC,KAAK;MACLW,UAAU;MACVF,WAAW;MACXL,QAAQ;MACRH,QAAQ;MACRE;IACF,CAAC;EACH,CAAC;EACDY,OAAOA,CAAA,EAAG,CAAC;AACb,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}