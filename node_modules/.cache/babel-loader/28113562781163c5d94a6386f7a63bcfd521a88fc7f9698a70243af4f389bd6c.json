{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"wrapper\"\n};\nconst _hoisted_2 = {\n  class: \"container\"\n};\nconst _hoisted_3 = {\n  class: \"container\"\n};\nconst _hoisted_4 = {\n  class: \"flex-container\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"div\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"Список задач\")], -1 /* HOISTED */);\nconst _hoisted_6 = {\n  key: 1,\n  class: \"task-list\"\n};\nconst _hoisted_7 = {\n  class: \"task-item__header\"\n};\nconst _hoisted_8 = {\n  class: \"left-filed\"\n};\nconst _hoisted_9 = [\"onClick\", \"checked\"];\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = {\n  class: \"task-item__footer\"\n};\nconst _hoisted_12 = {\n  class: \"task-item__date\"\n};\nconst _hoisted_13 = {\n  key: 2,\n  class: \"message-block\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AddTaskForm = _resolveComponent(\"AddTaskForm\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.openForm && $setup.openForm(...args)),\n    class: \"btn btn-add-task\"\n  }, \" Добавить задачу \")]), $setup.isOpenForm ? (_openBlock(), _createBlock(_component_AddTaskForm, {\n    key: 0,\n    \"task-name\": $setup.taskName\n  }, null, 8 /* PROPS */, [\"task-name\"])) : _createCommentVNode(\"v-if\", true), $setup.tasks.length > 0 ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.tasks, (task, ind) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: ind,\n      class: \"task-item\"\n    }, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"input\", {\n      onClick: $event => $setup.handleCheck(task),\n      checked: task.checked,\n      type: \"checkbox\",\n      class: \"task-item__checkbox mr-2\"\n    }, null, 8 /* PROPS */, _hoisted_9), _createElementVNode(\"span\", {\n      class: _normalizeClass([{\n        strikethrough: task.checked\n      }, \"task-name font-medium\"])\n    }, _toDisplayString(task.name), 3 /* TEXT, CLASS */)]), _createElementVNode(\"button\", {\n      onClick: $event => $setup.deleteTask(ind)\n    }, \"Удалить\", 8 /* PROPS */, _hoisted_10)]), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, _toDisplayString(task.date), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_13, \"Список задач пуст\"))])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","onClick","_cache","args","$setup","openForm","isOpenForm","_createBlock","_component_AddTaskForm","taskName","tasks","length","_hoisted_6","_Fragment","_renderList","task","ind","key","_hoisted_7","_hoisted_8","$event","handleCheck","checked","type","_normalizeClass","strikethrough","name","deleteTask","_hoisted_10","_hoisted_11","_hoisted_12","_toDisplayString","date","_hoisted_13"],"sources":["/Users/viktor/Documents/GitHub/todo-app/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"wrapper\">\n    <div class=\"container\">\n      <div class=\"container\">\n        <div class=\"flex-container\">\n          <div class=\"div\">\n            <h1>Список задач</h1>\n          </div>\n          <button @click=\"openForm\" class=\"btn btn-add-task\">\n            Добавить задачу\n          </button>\n        </div>\n        <AddTaskForm v-if=\"isOpenForm\" :task-name=\"taskName\"></AddTaskForm>\n        <ul v-if=\"tasks.length > 0\" class=\"task-list\">\n          <li v-for=\"(task, ind) in tasks\" :key=\"ind\" class=\"task-item\">\n            <div class=\"task-item__header\">\n              <div class=\"left-filed\">\n                <input\n                  @click=\"handleCheck(task)\"\n                  :checked=\"task.checked\"\n                  type=\"checkbox\"\n                  class=\"task-item__checkbox mr-2\"\n                />\n                <span\n                  :class=\"{ strikethrough: task.checked }\"\n                  class=\"task-name font-medium\"\n                  >{{ task.name }}</span\n                >\n              </div>\n              <button @click=\"deleteTask(ind)\">Удалить</button>\n            </div>\n            <div class=\"task-item__footer\">\n              <div class=\"task-item__date\">{{ task.date }}</div>\n            </div>\n          </li>\n        </ul>\n        <div v-else class=\"message-block\">Список задач пуст</div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport { saveToLocalStorage, getFromLocalStorage } from \"@/localstorage\";\nimport { getCurrentDate } from \"@/utils\";\nimport AddTaskForm from \"@/components/AddTaskForm\";\n\nexport default {\n  name: \"App\",\n  components: { AddTaskForm },\n  setup() {\n    const isOpenForm = ref(false);\n    const taskName = ref(\"\");\n    const tasks = ref(getFromLocalStorage(\"tasks\") || []);\n\n    const openForm = () => {\n      isOpenForm.value = true;\n    };\n\n    const closeForm = () => {\n      isOpenForm.value = false;\n    };\n\n    const onSubmit = () => {\n      if (taskName.value.length !== 0) {\n        tasks.value.push({\n          name: taskName.value,\n          checked: false,\n          date: getCurrentDate(),\n        });\n        saveToLocalStorage(\"tasks\", tasks.value);\n      }\n    };\n\n    const handleCheck = (task) => {\n      task.checked = !task.checked;\n      saveToLocalStorage(\"tasks\", tasks.value);\n    };\n\n    const deleteTask = (taskInd) => {\n      tasks.value = tasks.value.filter((task, i) => {\n        return i !== taskInd;\n      });\n      saveToLocalStorage(\"tasks\", tasks.value);\n    };\n\n    return {\n      isOpenForm,\n      taskName,\n      tasks,\n      deleteTask,\n      handleCheck,\n      onSubmit,\n      openForm,\n      closeForm,\n    };\n  },\n  mounted() {},\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\n* {\n  box-sizing: border-box;\n}\n\n.wrapper {\n  width: 100%;\n  height: 100%;\n}\n\n.container {\n  max-width: 700px;\n  margin: 0 auto;\n}\n\n.btn {\n  padding: 5px;\n  font-size: 16px;\n  border: none;\n  text-align: center;\n  text-decoration: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.flex-container {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.task-list {\n  width: 100%;\n  list-style: none;\n  padding: 0;\n  margin-top: 30px;\n}\n\n.task-item {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid lightgrey;\n  border-radius: 6px;\n}\n\n.task-item + .task-item {\n  margin-top: 20px;\n}\n\n.task-item__header {\n  display: flex;\n  justify-content: space-between;\n}\n\n.task-item__footer {\n  margin-top: 14px;\n  padding-top: 10px;\n  border-top: 1px solid lightgrey;\n}\n\n.task-item__date {\n  display: flex;\n  margin-left: 10px;\n}\n\n.task-name {\n  margin-left: 10px;\n}\n\n.form {\n  width: 100%;\n  display: flex;\n}\n\n.input {\n  width: 100%;\n  font-size: 16px;\n  padding: 5px;\n}\n\n.form__btn {\n  margin-left: 20px;\n}\n\n.strikethrough {\n  text-decoration: line-through;\n}\n\n.message-block {\n  margin-top: 40px;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAS;;EACbA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAgB;gCACzBC,mBAAA,CAEM;EAFDD,KAAK,EAAC;AAAK,I,aACdC,mBAAA,CAAqB,YAAjB,cAAY,E;;;EAOQD,KAAK,EAAC;;;EAEzBA,KAAK,EAAC;AAAmB;;EACvBA,KAAK,EAAC;AAAY;;;;EAepBA,KAAK,EAAC;AAAmB;;EACvBA,KAAK,EAAC;AAAiB;;;EAItBA,KAAK,EAAC;;;;uBAnCxBE,mBAAA,CAsCM,OAtCNC,UAsCM,GArCJF,mBAAA,CAoCM,OApCNG,UAoCM,GAnCJH,mBAAA,CAkCM,OAlCNI,UAkCM,GAjCJJ,mBAAA,CAOM,OAPNK,UAOM,GANJC,UAEM,EACNN,mBAAA,CAES;IAFAO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,MAAA,CAAAC,QAAA,IAAAD,MAAA,CAAAC,QAAA,IAAAF,IAAA,CAAQ;IAAEV,KAAK,EAAC;KAAmB,mBAEnD,E,GAEiBW,MAAA,CAAAE,UAAU,I,cAA7BC,YAAA,CAAmEC,sBAAA;;IAAnC,WAAS,EAAEJ,MAAA,CAAAK;+EACjCL,MAAA,CAAAM,KAAK,CAACC,MAAM,Q,cAAtBhB,mBAAA,CAsBK,MAtBLiB,UAsBK,I,kBArBHjB,mBAAA,CAoBKkB,SAAA,QAAAC,WAAA,CApBqBV,MAAA,CAAAM,KAAK,GAAnBK,IAAI,EAAEC,GAAG;yBAArBrB,mBAAA,CAoBK;MApB6BsB,GAAG,EAAED,GAAG;MAAEvB,KAAK,EAAC;QAChDC,mBAAA,CAeM,OAfNwB,UAeM,GAdJxB,mBAAA,CAYM,OAZNyB,UAYM,GAXJzB,mBAAA,CAKE;MAJCO,OAAK,EAAAmB,MAAA,IAAEhB,MAAA,CAAAiB,WAAW,CAACN,IAAI;MACvBO,OAAO,EAAEP,IAAI,CAACO,OAAO;MACtBC,IAAI,EAAC,UAAU;MACf9B,KAAK,EAAC;yCAERC,mBAAA,CAIC;MAHED,KAAK,EAAA+B,eAAA;QAAAC,aAAA,EAAmBV,IAAI,CAACO;MAAO,GAC/B,uBAAuB;wBACzBP,IAAI,CAACW,IAAI,wB,GAGjBhC,mBAAA,CAAiD;MAAxCO,OAAK,EAAAmB,MAAA,IAAEhB,MAAA,CAAAuB,UAAU,CAACX,GAAG;OAAG,SAAO,iBAAAY,WAAA,E,GAE1ClC,mBAAA,CAEM,OAFNmC,WAEM,GADJnC,mBAAA,CAAkD,OAAlDoC,WAAkD,EAAAC,gBAAA,CAAlBhB,IAAI,CAACiB,IAAI,iB;qDAI/CrC,mBAAA,CAAyD,OAAzDsC,WAAyD,EAAvB,mBAAiB,G"},"metadata":{},"sourceType":"module","externalDependencies":[]}